scalar JSON
scalar Uint
scalar Time

enum TaskType {
  input
  action
}

enum TaskStatus {
  inProgress
  finished
  stopped
  failed
}

type Task {
  id: Uint!
  message: String!
  createdAt: Time!
  type: TaskType!
  status: TaskStatus!
  args: JSON!
  results: JSON!
}

type Flow {
  id: Uint!
  name: String!
  tasks: [Task!]!
}

type Query {
  flows: [Flow!]!
  flow(id: Uint!): Flow!
}

type Mutation {
  createFlow: Flow!
  createTask(id: Uint!, query: String!): Task!
  stopTask(id: Uint!): Task!
}

type Subscription {
  taskAdded: Task!
  taskUpdated: Task!
}
